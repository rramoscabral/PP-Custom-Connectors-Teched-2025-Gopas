// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyAppDemo.DataLayer.DBContext;

#nullable disable

namespace MyAppDemo.DataLayer.Migrations
{
    [DbContext(typeof(WebAPIDbContext))]
    [Migration("20250502193011_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyAppDemo.DataLayer.Models.AuthorizedEmail", b =>
                {
                    b.Property<int>("GitHubIssueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GitHubIssueId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Service")
                        .HasColumnType("int");

                    b.HasKey("GitHubIssueId");

                    b.HasIndex("Email", "Service")
                        .IsUnique();

                    b.ToTable("AuthorizedEmails", "CustomConnector");
                });

            modelBuilder.Entity("MyAppDemo.DataLayer.Models.GitHubRepository", b =>
                {
                    b.Property<int>("GitHubIssueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GitHubIssueId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RepositoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("GitHubIssueId");

                    b.HasIndex("OwnerName", "RepositoryName", "Email")
                        .IsUnique();

                    b.ToTable("GitHubRepositories", "CustomConnector");
                });

            modelBuilder.Entity("MyAppDemo.DataLayer.Models.Webhook", b =>
                {
                    b.Property<int>("GitHubIssueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GitHubIssueId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FlowId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("WebhookUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("GitHubIssueId");

                    b.HasIndex("WebhookUrl")
                        .IsUnique();

                    b.ToTable("Webhooks", "CustomConnector");
                });
#pragma warning restore 612, 618
        }
    }
}
